name: Build and deploy GH Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: build zola SS
        run: |
          sudo snap install --edge zola
          zola build
      - name: Ensure talks dir exists
        run: "mkdir -p public/slides"
      - name: copy files and css into talks
        run: "cp -r slides/fig slides/styles public/slides/"
      - name: Marp Build (*.html)
        uses: docker://marpteam/marp-cli:v3.4.0
        with:
          args: --allow-local-files -I ./slides/ -o ./public/slides --html
        env:
          MARP_USER: root:root
      - name: Marp Build (*.pdf)
        uses: docker://marpteam/marp-cli:v3.4.0
        with:
          args: --allow-local-files -I ./slides/ -o ./public/slides --pdf
        env:
          MARP_USER: root:root
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2